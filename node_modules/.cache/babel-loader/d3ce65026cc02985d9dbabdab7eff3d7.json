{"ast":null,"code":"import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\nconst initialState = {\n  userNameInput: \"\",\n  userPasswordInput: \"\",\n  UserFullName: \"\",\n  userEmail: \"\",\n  userAddress: \"\",\n  userPhone: \"\",\n  token: \"\",\n  searchKeyword: \"\",\n  isLoading: false,\n  cekFotoStatus: false,\n  linkAudio: \"\",\n  fullName: \"\",\n  is_login: false,\n  textAudio: \"Indonesia\",\n  usename: \"\",\n  password: \"\"\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  getSignIn: async state => {\n    console.log(\"username\", state.userNameInput);\n    console.log(\"password\", state.userPasswordInput);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const mydata = {\n      \"username\": username,\n      \"password\": password\n    };\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/login?username=\" + username + \"&password=\" + password\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      console.log(\"token === \", response.data.token);\n      console.log(\"password === \", password);\n      console.log(\"login = \", store.is_login);\n\n      if (response.data.token !== null) {\n        localStorage.setItem(\"token\", response.data.token);\n        store.setState({\n          token: response.data.token,\n          is_login: true,\n          username: userNameInput,\n          password: userPasswordInput\n        });\n        self.props.history.push(\"/\");\n        alert(\"login success\");\n      }\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  postSignUp1: async state => {\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/user/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      console.log(mydata);\n      console.log(error);\n      return false;\n    });\n  },\n  postSignUp2: async state => {\n    console.warn(\"username\", state.userNameInput);\n    console.warn(\"password\", state.userPasswordInput);\n    console.warn(\"fullname\", state.UserFullName);\n    console.warn(\"address\", state.userAddress);\n    console.warn(\"email\", state.userEmail);\n    console.warn(\"phone\", state.userPhone);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/agent/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      store.setState({\n        token: response.data.token,\n        is_login: true\n      });\n      self.props.history.push(\"/\");\n      alert(\"login success\");\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta10/fuk/github/fullstack4_hedy/Phase 2/Project Frontend/porto/src/store.js"],"names":["createStore","string","axios","initialState","userNameInput","userPasswordInput","UserFullName","userEmail","userAddress","userPhone","token","searchKeyword","isLoading","cekFotoStatus","linkAudio","fullName","is_login","textAudio","usename","password","store","actions","getSignIn","state","console","log","username","mydata","req","method","url","self","then","response","data","localStorage","setItem","setState","props","history","push","alert","catch","error","postSignUp1","fullname","address","email","phone","headers","postSignUp2","warn"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAC,EADG;AAEjBC,EAAAA,iBAAiB,EAAC,EAFD;AAGjBC,EAAAA,YAAY,EAAC,EAHI;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,WAAW,EAAC,EALK;AAMjBC,EAAAA,SAAS,EAAC,EANO;AAOjBC,EAAAA,KAAK,EAAC,EAPW;AAQjBC,EAAAA,aAAa,EAAC,EARG;AASjBC,EAAAA,SAAS,EAAC,KATO;AAUjBC,EAAAA,aAAa,EAAE,KAVE;AAWjBC,EAAAA,SAAS,EAAE,EAXM;AAYjBC,EAAAA,QAAQ,EAAG,EAZM;AAajBC,EAAAA,QAAQ,EAAE,KAbO;AAcjBC,EAAAA,SAAS,EAAE,WAdM;AAejBC,EAAAA,OAAO,EAAG,EAfO;AAgBjBC,EAAAA,QAAQ,EAAE;AAhBO,CAArB;AAmBA,OAAO,MAAMC,KAAK,GAAGpB,WAAW,CAACG,YAAD,CAAzB;AAEP,OAAO,MAAMkB,OAAO,GAAGD,KAAK,KAAK;AAC7BE,EAAAA,SAAS,EAAG,MAAOC,KAAP,IAAiB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,KAAK,CAACnB,aAA7B;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,KAAK,CAAClB,iBAA7B;AACA,UAAMqB,QAAQ,GAAGH,KAAK,CAACnB,aAAvB;AACA,UAAMe,QAAQ,GAAGI,KAAK,CAAClB,iBAAvB;AACA,UAAMsB,MAAM,GAAG;AACX,kBAAYD,QADD;AAEX,kBAAYP;AAFD,KAAf;AAIA,UAAMS,GAAG,GAAG;AACRC,MAAAA,MAAM,EAAE,KADA;AAERC,MAAAA,GAAG,EAAE,wCAAsCJ,QAAtC,GAA+C,YAA/C,GAA4DP;AAFzD,KAAZ;AAIE,UAAMY,IAAI,GAAG,IAAb;AACA,UAAM7B,KAAK,CAAC0B,GAAD,CAAL,CACLI,IADK,CACA,UAASC,QAAT,EAAkB;AAClBT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,QAAQ,CAACC,IAAT,CAAcxB,KAAxC;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,QAA7B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,KAAK,CAACJ,QAA9B;;AACA,UAAIiB,QAAQ,CAACC,IAAT,CAAcxB,KAAd,KAAwB,IAA5B,EAAkC;AAC9ByB,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACC,IAAT,CAAcxB,KAA5C;AACAU,QAAAA,KAAK,CAACiB,QAAN,CAAe;AAAC3B,UAAAA,KAAK,EAAGuB,QAAQ,CAACC,IAAT,CAAcxB,KAAvB;AACCM,UAAAA,QAAQ,EAAG,IADZ;AAECU,UAAAA,QAAQ,EAAGtB,aAFZ;AAGCe,UAAAA,QAAQ,EAAGd;AAHZ,SAAf;AAIA0B,QAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACAC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACH;AACJ,KAdG,EAeHC,KAfG,CAeG,UAASC,KAAT,EAAe;AAClBvB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAACzB,QAAAA,SAAS,EAAE;AAAZ,OAAf,EADkB,CAElB;;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,KAnBG,CAAN;AAoBL,GAnC4B;AAqC7BC,EAAAA,WAAW,EAAG,MAAOrB,KAAP,IAAiB;AAC3B,UAAMG,QAAQ,GAAGH,KAAK,CAACnB,aAAvB;AACA,UAAMe,QAAQ,GAAGI,KAAK,CAAClB,iBAAvB;AACA,UAAMwC,QAAQ,GAAGtB,KAAK,CAACjB,YAAvB;AACA,UAAMwC,OAAO,GAAGvB,KAAK,CAACf,WAAtB;AACA,UAAMuC,KAAK,GAAGxB,KAAK,CAAChB,SAApB;AACA,UAAMyC,KAAK,GAAGzB,KAAK,CAACd,SAApB;AACA,UAAMkB,MAAM,GAAG;AACX,kBAAYD,QADD;AAEX,kBAAYP,QAFD;AAGX,kBAAY0B,QAHD;AAIX,eAASE,KAJE;AAKX,iBAAWD,OALA;AAMX,sBAAgBE;AANL,KAAf;AASA,UAAMpB,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAE,uCAFK;AAGVmB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHC;AAMVf,MAAAA,IAAI,EAAEP;AANI,KAAZ;AASA,UAAMzB,KAAK,CAAC0B,GAAD,CAAL,CACDI,IADC,CACIC,QAAQ,IAAI;AACZb,MAAAA,KAAK,CAACiB,QAAN,CAAe;AACX,oBAAY;AADD,OAAf,EADY,CAIhB;AACD,KANC,EAODK,KAPC,CAOKC,KAAK,IAAI;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,aAAO,KAAP;AACP,KAXK,CAAN;AAYH,GA1E4B;AA2E7BO,EAAAA,WAAW,EAAG,MAAO3B,KAAP,IAAiB;AAC3BC,IAAAA,OAAO,CAAC2B,IAAR,CAAa,UAAb,EAAwB5B,KAAK,CAACnB,aAA9B;AACAoB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,UAAb,EAAwB5B,KAAK,CAAClB,iBAA9B;AACAmB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,UAAb,EAAwB5B,KAAK,CAACjB,YAA9B;AACAkB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,SAAb,EAAuB5B,KAAK,CAACf,WAA7B;AACAgB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,OAAb,EAAqB5B,KAAK,CAAChB,SAA3B;AACAiB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,OAAb,EAAqB5B,KAAK,CAACd,SAA3B;AACA,UAAMiB,QAAQ,GAAGH,KAAK,CAACnB,aAAvB;AACA,UAAMe,QAAQ,GAAGI,KAAK,CAAClB,iBAAvB;AACA,UAAMwC,QAAQ,GAAGtB,KAAK,CAACjB,YAAvB;AACA,UAAMwC,OAAO,GAAGvB,KAAK,CAACf,WAAtB;AACA,UAAMuC,KAAK,GAAGxB,KAAK,CAAChB,SAApB;AACA,UAAMyC,KAAK,GAAGzB,KAAK,CAACd,SAApB;AACA,UAAMkB,MAAM,GAAG;AACX,kBAAYD,QADD;AAEX,kBAAYP,QAFD;AAGX,kBAAY0B,QAHD;AAIX,eAASE,KAJE;AAKX,iBAAWD,OALA;AAMX,sBAAgBE;AANL,KAAf;AASA,UAAMpB,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAE,wCAFK;AAGVmB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHC;AAMVf,MAAAA,IAAI,EAAEP;AANI,KAAZ;AAQA,UAAMI,IAAI,GAAG,IAAb;AACA,UAAM7B,KAAK,CAAC0B,GAAD,CAAL,CACLI,IADK,CACA,UAASC,QAAT,EAAkB;AACpBb,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAAC3B,QAAAA,KAAK,EAAGuB,QAAQ,CAACC,IAAT,CAAcxB,KAAvB;AAA8BM,QAAAA,QAAQ,EAAG;AAAzC,OAAf;AACAe,MAAAA,IAAI,CAACO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACIC,MAAAA,KAAK,CAAC,eAAD,CAAL;AACP,KALK,EAMLC,KANK,CAMC,UAASC,KAAT,EAAe;AAClBvB,MAAAA,KAAK,CAACiB,QAAN,CAAe;AAACzB,QAAAA,SAAS,EAAE;AAAZ,OAAf,EADkB,CAElB;;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACH,KAVK,CAAN;AAYH;AAtH4B,CAAL,CAArB","sourcesContent":["import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\n\nconst initialState = {\n    userNameInput:\"\",\n    userPasswordInput:\"\",\n    UserFullName:\"\",\n    userEmail:\"\",\n    userAddress:\"\",\n    userPhone:\"\",\n    token:\"\",\n    searchKeyword:\"\",\n    isLoading:false,\n    cekFotoStatus: false,\n    linkAudio: \"\",\n    fullName : \"\",\n    is_login: false,\n    textAudio: \"Indonesia\",\n    usename : \"\",\n    password: \"\"\n   \n};\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    getSignIn : async (state) => {\n        console.log(\"username\",state.userNameInput)\n        console.log(\"password\",state.userPasswordInput)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const mydata = {\n            \"username\": username,\n            \"password\": password\n        };\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/login?username=\"+username+\"&password=\"+password\n          };\n          const self = this\n          await axios(req)\n          .then(function(response){\n                console.log(\"token === \", response.data.token)\n                console.log(\"password === \", password)\n                console.log(\"login = \", store.is_login)\n                if (response.data.token !== null ){\n                    localStorage.setItem(\"token\", response.data.token);\n                    store.setState({token : response.data.token, \n                                    is_login : true, \n                                    username : userNameInput,\n                                    password : userPasswordInput})\n                    self.props.history.push(\"/\")               \n                    alert(\"login success\")\n                }\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n                console.log(error)\n            })\n    },\n\n    postSignUp1 : async (state) => {\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/user/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                console.log(mydata)\n                console.log(error)\n                return false\n        })\n    },\n    postSignUp2 : async (state) => {\n        console.warn(\"username\",state.userNameInput)\n        console.warn(\"password\",state.userPasswordInput)\n        console.warn(\"fullname\",state.UserFullName)\n        console.warn(\"address\",state.userAddress)\n        console.warn(\"email\",state.userEmail)\n        console.warn(\"phone\",state.userPhone)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/agent/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n        const self = this\n        await axios(req)\n        .then(function(response){\n            store.setState({token : response.data.token, is_login : true})\n            self.props.history.push(\"/\")               \n                alert(\"login success\")\n        })\n        .catch(function(error){\n            store.setState({isLoading: false})\n            // handle error\n            console.log(error)\n        })\n        \n    }\n})\n"]},"metadata":{},"sourceType":"module"}
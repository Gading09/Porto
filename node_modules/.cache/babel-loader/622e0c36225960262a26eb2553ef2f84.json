{"ast":null,"code":"import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\nconst initialState = {\n  userNameInput: \"\",\n  userPasswordInput: \"\",\n  UserFullName: \"\",\n  userEmail: \"\",\n  userAddress: \"\",\n  userPhone: \"\",\n  searchKeyword: \"\",\n  isiArticle: \"\",\n  judulArticle: \"\",\n  fotoUrlInput: \"\",\n  isLoading: false,\n  cekFotoStatus: false,\n  linkAudio: \"\",\n  fullName: \"\",\n  textAudio: \"Indonesia\"\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  getArticle: async (state, searchKeyword) => {\n    console.log(initialState.searchKeyword);\n    store.setState({\n      isLoading: true\n    });\n    await axios.get(\"https://en.wikipedia.org/api/rest_v1/page/summary/\" + searchKeyword).then(function (response) {\n      store.setState({\n        isiArticle: response.data.extract,\n        judulArticle: response.data.title,\n        isLoading: false\n      });\n      console.log(response);\n      console.log(initialState.isiArticle);\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      });\n      console.log(initialState.searchKeyword); // handle error\n\n      console.log(error);\n    });\n  },\n  getRandomArticle: async state => {\n    store.setState({\n      isLoading: true\n    });\n    await axios.get(\"https://en.wikipedia.org/api/rest_v1/page/random/summary\").then(function (response) {\n      store.setState({\n        isiArticle: response.data.extract,\n        judulArticle: response.data.title,\n        isLoading: false\n      });\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  postSignUp1: async state => {\n    const nama_lengkap = state.nama_lengkap;\n    const kata_sandi = state.kata_sandi;\n    const email = state.email;\n    const mydata = {\n      nama_lengkap: nama_lengkap,\n      email: email,\n      kata_sandi: kata_sandi\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/user/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      return false;\n    });\n  },\n  postSignUp2: async state => {\n    const nama_lengkap = state.nama_lengkap;\n    const kata_sandi = state.kata_sandi;\n    const email = state.email;\n    const mydata = {\n      nama_lengkap: nama_lengkap,\n      email: email,\n      kata_sandi: kata_sandi\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/user\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      return false;\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta10/fuk/github/fullstack4_hedy/Phase 2/Project Frontend/porto/src/store.js"],"names":["createStore","string","axios","initialState","userNameInput","userPasswordInput","UserFullName","userEmail","userAddress","userPhone","searchKeyword","isiArticle","judulArticle","fotoUrlInput","isLoading","cekFotoStatus","linkAudio","fullName","textAudio","store","actions","getArticle","state","console","log","setState","get","then","response","data","extract","title","catch","error","getRandomArticle","postSignUp1","nama_lengkap","kata_sandi","email","mydata","req","method","url","headers","postSignUp2"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,UAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAC,EADG;AAEjBC,EAAAA,iBAAiB,EAAC,EAFD;AAGjBC,EAAAA,YAAY,EAAC,EAHI;AAIjBC,EAAAA,SAAS,EAAC,EAJO;AAKjBC,EAAAA,WAAW,EAAC,EALK;AAMjBC,EAAAA,SAAS,EAAC,EANO;AAOjBC,EAAAA,aAAa,EAAC,EAPG;AAQjBC,EAAAA,UAAU,EAAC,EARM;AASjBC,EAAAA,YAAY,EAAC,EATI;AAUjBC,EAAAA,YAAY,EAAE,EAVG;AAWjBC,EAAAA,SAAS,EAAC,KAXO;AAYjBC,EAAAA,aAAa,EAAE,KAZE;AAajBC,EAAAA,SAAS,EAAE,EAbM;AAcjBC,EAAAA,QAAQ,EAAG,EAdM;AAejBC,EAAAA,SAAS,EAAE;AAfM,CAArB;AAkBA,OAAO,MAAMC,KAAK,GAAGnB,WAAW,CAACG,YAAD,CAAzB;AAEP,OAAO,MAAMiB,OAAO,GAAGD,KAAK,KAAK;AAC7BE,EAAAA,UAAU,EAAE,OAAOC,KAAP,EAAcZ,aAAd,KAAgC;AACxCa,IAAAA,OAAO,CAACC,GAAR,CAAYrB,YAAY,CAACO,aAAzB;AACAS,IAAAA,KAAK,CAACM,QAAN,CAAe;AAACX,MAAAA,SAAS,EAAC;AAAX,KAAf;AACA,UAAMZ,KAAK,CACNwB,GADC,CACG,uDAAqDhB,aADxD,EAEDiB,IAFC,CAEI,UAASC,QAAT,EAAkB;AACpBT,MAAAA,KAAK,CAACM,QAAN,CAAe;AAACd,QAAAA,UAAU,EAACiB,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AAAmClB,QAAAA,YAAY,EAACgB,QAAQ,CAACC,IAAT,CAAcE,KAA9D;AAAqEjB,QAAAA,SAAS,EAAC;AAA/E,OAAf;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYrB,YAAY,CAACQ,UAAzB;AACH,KANC,EAODqB,KAPC,CAOK,UAASC,KAAT,EAAe;AAClBd,MAAAA,KAAK,CAACM,QAAN,CAAe;AAACX,QAAAA,SAAS,EAAE;AAAZ,OAAf;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYrB,YAAY,CAACO,aAAzB,EAFkB,CAGlB;;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,KAZC,CAAN;AAaH,GAjB4B;AAkB7BC,EAAAA,gBAAgB,EAAE,MAAOZ,KAAP,IAAiB;AAC/BH,IAAAA,KAAK,CAACM,QAAN,CAAe;AAACX,MAAAA,SAAS,EAAC;AAAX,KAAf;AACA,UAAMZ,KAAK,CACNwB,GADC,CACG,0DADH,EAEDC,IAFC,CAEI,UAASC,QAAT,EAAkB;AACpBT,MAAAA,KAAK,CAACM,QAAN,CAAe;AAACd,QAAAA,UAAU,EAACiB,QAAQ,CAACC,IAAT,CAAcC,OAA1B;AAAmClB,QAAAA,YAAY,EAACgB,QAAQ,CAACC,IAAT,CAAcE,KAA9D;AAAqEjB,QAAAA,SAAS,EAAC;AAA/E,OAAf;AACH,KAJC,EAKDkB,KALC,CAKK,UAASC,KAAT,EAAe;AAClBd,MAAAA,KAAK,CAACM,QAAN,CAAe;AAACX,QAAAA,SAAS,EAAE;AAAZ,OAAf,EADkB,CAElB;;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACH,KATC,CAAN;AAUH,GA9B4B;AA+B7BE,EAAAA,WAAW,EAAG,MAAOb,KAAP,IAAiB;AAC3B,UAAMc,YAAY,GAAGd,KAAK,CAACc,YAA3B;AACA,UAAMC,UAAU,GAAGf,KAAK,CAACe,UAAzB;AACA,UAAMC,KAAK,GAAGhB,KAAK,CAACgB,KAApB;AACA,UAAMC,MAAM,GAAG;AACXH,MAAAA,YAAY,EAAEA,YADH;AAEXE,MAAAA,KAAK,EAAEA,KAFI;AAGXD,MAAAA,UAAU,EAAEA;AAHD,KAAf;AAMA,UAAMG,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAE,uCAFK;AAGVC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHC;AAMVd,MAAAA,IAAI,EAAEU;AANI,KAAZ;AASA,UAAMrC,KAAK,CAACsC,GAAD,CAAL,CACDb,IADC,CACIC,QAAQ,IAAI;AACZT,MAAAA,KAAK,CAACM,QAAN,CAAe;AACX,oBAAY;AADD,OAAf,EADY,CAIhB;AACD,KANC,EAODO,KAPC,CAOKC,KAAK,IAAI;AACZ,aAAO,KAAP;AACP,KATK,CAAN;AAUH,GA5D4B;AA6D7BW,EAAAA,WAAW,EAAG,MAAOtB,KAAP,IAAiB;AAC3B,UAAMc,YAAY,GAAGd,KAAK,CAACc,YAA3B;AACA,UAAMC,UAAU,GAAGf,KAAK,CAACe,UAAzB;AACA,UAAMC,KAAK,GAAGhB,KAAK,CAACgB,KAApB;AACA,UAAMC,MAAM,GAAG;AACXH,MAAAA,YAAY,EAAEA,YADH;AAEXE,MAAAA,KAAK,EAAEA,KAFI;AAGXD,MAAAA,UAAU,EAAEA;AAHD,KAAf;AAMA,UAAMG,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAE,0BAFK;AAGVC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHC;AAMVd,MAAAA,IAAI,EAAEU;AANI,KAAZ;AASA,UAAMrC,KAAK,CAACsC,GAAD,CAAL,CACDb,IADC,CACIC,QAAQ,IAAI;AACZT,MAAAA,KAAK,CAACM,QAAN,CAAe;AACX,oBAAY;AADD,OAAf,EADY,CAIhB;AACD,KANC,EAODO,KAPC,CAOKC,KAAK,IAAI;AACZ,aAAO,KAAP;AACP,KATK,CAAN;AAUH;AA1F4B,CAAL,CAArB","sourcesContent":["import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\n\nconst initialState = {\n    userNameInput:\"\",\n    userPasswordInput:\"\",\n    UserFullName:\"\",\n    userEmail:\"\",\n    userAddress:\"\",\n    userPhone:\"\",\n    searchKeyword:\"\",\n    isiArticle:\"\",\n    judulArticle:\"\",\n    fotoUrlInput: \"\",\n    isLoading:false,\n    cekFotoStatus: false,\n    linkAudio: \"\",\n    fullName : \"\",\n    textAudio: \"Indonesia\",\n    \n};\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    getArticle: async (state, searchKeyword) => {\n        console.log(initialState.searchKeyword)\n        store.setState({isLoading:true})\n        await axios\n            .get(\"https://en.wikipedia.org/api/rest_v1/page/summary/\"+searchKeyword)\n            .then(function(response){\n                store.setState({isiArticle:response.data.extract, judulArticle:response.data.title, isLoading:false})\n                console.log(response)\n                console.log(initialState.isiArticle)\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                console.log(initialState.searchKeyword)\n                // handle error\n                console.log(error)\n            })\n    },\n    getRandomArticle: async (state) => {\n        store.setState({isLoading:true})\n        await axios\n            .get(\"https://en.wikipedia.org/api/rest_v1/page/random/summary\")\n            .then(function(response){\n                store.setState({isiArticle:response.data.extract, judulArticle:response.data.title, isLoading:false})\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n                console.log(error)\n            })\n    },\n    postSignUp1 : async (state) => {\n        const nama_lengkap = state.nama_lengkap\n        const kata_sandi = state.kata_sandi\n        const email = state.email\n        const mydata = {\n            nama_lengkap: nama_lengkap,\n            email: email,\n            kata_sandi: kata_sandi\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/user/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                return false\n        })\n    },\n    postSignUp2 : async (state) => {\n        const nama_lengkap = state.nama_lengkap\n        const kata_sandi = state.kata_sandi\n        const email = state.email\n        const mydata = {\n            nama_lengkap: nama_lengkap,\n            email: email,\n            kata_sandi: kata_sandi\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/user\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                return false\n        })\n    }\n})\n"]},"metadata":{},"sourceType":"module"}
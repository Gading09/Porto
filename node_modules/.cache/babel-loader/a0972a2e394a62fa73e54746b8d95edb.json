{"ast":null,"code":"import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\nconst initialState = {\n  userNameInput: \"\",\n  userPasswordInput: \"\",\n  UserFullName: \"\",\n  userShop: \"\",\n  userEmail: \"\",\n  userAddress: \"\",\n  userPhone: \"\",\n  token: \"\",\n  searchKeyword: \"\",\n  isLoading: false,\n  cekFotoStatus: false,\n  linkAudio: \"\",\n  fullName: \"\",\n  is_login: false,\n  textAudio: \"Indonesia\",\n  usename: \"\",\n  password: \"\",\n  image_user: \"\",\n  name_user: \"\",\n  rating_user: \"\",\n  review_user: \"\",\n  image_agent: \"\",\n  name_agent: \"\",\n  rating_agent: \"\",\n  review_agent: \"\"\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  getSignIn: async state => {\n    console.log(\"username\", state.userNameInput);\n    console.log(\"password\", state.userPasswordInput);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const mydata = {\n      \"username\": username,\n      \"password\": password\n    };\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/login?username=\" + username + \"&password=\" + password\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      console.log(\"token === \", response.data.token);\n      console.log(\"password === \", password);\n      console.log(\"login = \", store.is_login);\n\n      if (response.data.token !== null) {\n        localStorage.setItem(\"token\", response.data.token);\n        store.setState({\n          token: response.data.token,\n          is_login: true,\n          username: state.userNameInput,\n          password: state.userPasswordInput\n        });\n        self.props.history.push(\"/\");\n        alert(\"login success\");\n      }\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n    });\n  },\n  getProfileUser: async (state, token) => {\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/user\",\n      Authorization: \"Bearer \" + localStorage.getItem('token')\n    };\n    console.log();\n    const self = this;\n    await axios(req).then(function (response) {\n      console.log(\"id === \", response.data.id);\n\n      if (response.data.id !== null) {\n        localStorage.setItem(\"role\", response.data.role);\n        self.props.history.push(\"/\");\n        alert(\"login success\");\n      }\n    }).catch(function (error) {// handle error\n    });\n  },\n  getProfileAgent: async (state, token) => {\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/agent\",\n      Authorization: \"Bearer \" + token\n    };\n    console.log();\n    const self = this;\n    await axios(req).then(function (response) {\n      console.log(\"id === \", response.data.id);\n\n      if (response.data.id !== null) {\n        localStorage.setItem(\"role\", response.data.role);\n        self.props.history.push(\"/\");\n        alert(\"login success\");\n      }\n    }).catch(function (error) {// handle error\n    });\n  },\n  getProfileSeller: async (state, token) => {\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/seller\",\n      Authorization: \"Bearer \" + token\n    };\n    console.log();\n    const self = this;\n    await axios(req).then(function (response) {\n      console.log(\"id === \", response.data.id);\n\n      if (response.data.id !== null) {\n        localStorage.setItem(\"role\", response.data.role);\n        self.props.history.push(\"/\");\n        alert(\"login success\");\n      }\n    }).catch(function (error) {// handle error\n    });\n  },\n  postSignUp1: async state => {\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/user/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      console.log(mydata);\n      console.log(error);\n      return false;\n    });\n  },\n  postSignUp2: async state => {\n    console.warn(\"username\", state.userNameInput);\n    console.warn(\"password\", state.userPasswordInput);\n    console.warn(\"fullname\", state.UserFullName);\n    console.warn(\"address\", state.userAddress);\n    console.warn(\"email\", state.userEmail);\n    console.warn(\"phone\", state.userPhone);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/agent/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      store.setState({\n        token: response.data.token,\n        is_login: true\n      });\n      self.props.history.push(\"/\");\n      alert(\"login success\");\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n    });\n  },\n  postSignUp3: async state => {\n    console.warn(\"username\", state.userNameInput);\n    console.warn(\"password\", state.userPasswordInput);\n    console.warn(\"toko\", state.userShop);\n    console.warn(\"fullname\", state.UserFullName);\n    console.warn(\"address\", state.userAddress);\n    console.warn(\"email\", state.userEmail);\n    console.warn(\"phone\", state.userPhone);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const shop = state.userShop;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"shop_name\": shop,\n      \"fullname_owner\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/seller/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      store.setState({\n        token: response.data.token,\n        is_login: true\n      });\n      self.props.history.push(\"/\");\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  Review: async state => {\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/review\"\n    };\n    const self = this;\n    await axios(req).then(function (response) {\n      store.setState({\n        image_user: response.data.image_user,\n        name_user: response.data.nama_user,\n        rating_user: response.data.rating_user,\n        review_user: response.data.review_user,\n        image_agent: response.data.image_agent,\n        name_agent: response.data.nama_agent,\n        rating_agent: response.data.rating_agent,\n        review_agent: response.data.review_agent\n      });\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  } // RequestDataProfuctasync : async (state) => {\n  //     const req = {\n  //         method: \"get\",\n  //         url: \"http://0.0.0.0:5000/review\"\n  //       };\n  //       const self = this\n  //       await axios(req)\n  //       .then(function(response){\n  //             store.setState({\n  //                 image_user : response.data.image_user, \n  //                 name_user: response.data.nama_user, \n  //                 rating_user: response.data.rating_user, \n  //                 review_user: response.data.review_user, \n  //                 image_agent : response.data.image_agent, \n  //                 name_agent: response.data.nama_agent, \n  //                 rating_agent: response.data.rating_agent, \n  //                 review_agent: response.data.review_agent,\n  //             })                \n  //         })\n  //         .catch(function(error){\n  //             store.setState({isLoading: false})\n  //             // handle error\n  //             console.log(error)\n  //         })\n  //     }\n\n});","map":{"version":3,"sources":["/home/alta10/fuk/github/fullstack4_hedy/Phase 2/Project Frontend/porto/src/store.js"],"names":["createStore","string","axios","initialState","userNameInput","userPasswordInput","UserFullName","userShop","userEmail","userAddress","userPhone","token","searchKeyword","isLoading","cekFotoStatus","linkAudio","fullName","is_login","textAudio","usename","password","image_user","name_user","rating_user","review_user","image_agent","name_agent","rating_agent","review_agent","store","actions","getSignIn","state","console","log","username","mydata","req","method","url","self","then","response","data","localStorage","setItem","setState","props","history","push","alert","catch","error","getProfileUser","Authorization","getItem","id","role","getProfileAgent","getProfileSeller","postSignUp1","fullname","address","email","phone","headers","postSignUp2","warn","postSignUp3","shop","Review","nama_user","nama_agent"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\n\nconst initialState = {\n    userNameInput:\"\",\n    userPasswordInput:\"\",\n    UserFullName:\"\",\n    userShop:\"\",\n    userEmail:\"\",\n    userAddress:\"\",\n    userPhone:\"\",\n    token:\"\",\n    searchKeyword:\"\",\n    isLoading:false,\n    cekFotoStatus: false,\n    linkAudio: \"\",\n    fullName : \"\",\n    is_login: false,\n    textAudio: \"Indonesia\",\n    usename : \"\",\n    password: \"\",\n    image_user: \"\",\n    name_user: \"\",\n    rating_user:\"\",\n    review_user:\"\",\n    image_agent: \"\",\n    name_agent: \"\",\n    rating_agent:\"\",\n    review_agent:\"\"\n   \n};\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    getSignIn : async (state) => {\n        console.log(\"username\",state.userNameInput)\n        console.log(\"password\",state.userPasswordInput)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const mydata = {\n            \"username\": username,\n            \"password\": password\n        };\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/login?username=\"+username+\"&password=\"+password\n          };\n          const self = this\n          await axios(req)\n          .then(function(response){\n                console.log(\"token === \", response.data.token)\n                console.log(\"password === \", password)\n                console.log(\"login = \", store.is_login)\n                if (response.data.token !== null ){\n                    localStorage.setItem(\"token\", response.data.token);\n                    store.setState({token : response.data.token, \n                                    is_login : true, \n                                    username : state.userNameInput,\n                                    password : state.userPasswordInput})\n                    self.props.history.push(\"/\")               \n                    alert(\"login success\")\n                }\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n            })\n    },\n\n    getProfileUser : async (state,token) => {\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/user\",\n            Authorization: \"Bearer \" + localStorage.getItem('token')\n          };\n          console.log()\n          const self = this\n          await axios(req)\n          .then(function(response){\n                console.log(\"id === \", response.data.id)\n                if (response.data.id !== null ){\n                    localStorage.setItem(\"role\", response.data.role);\n                    self.props.history.push(\"/\")               \n                    alert(\"login success\")\n                }\n            })\n            .catch(function(error){\n                // handle error\n            })\n    },\n\n    getProfileAgent : async (state,token) => {\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/agent\",\n            Authorization: \"Bearer \" + token\n          };\n          console.log()\n          const self = this\n          await axios(req)\n          .then(function(response){\n                console.log(\"id === \", response.data.id)\n                if (response.data.id !== null ){\n                    localStorage.setItem(\"role\", response.data.role);\n                    self.props.history.push(\"/\")               \n                    alert(\"login success\")\n                }\n            })\n            .catch(function(error){\n                // handle error\n            })\n    },\n\n    getProfileSeller : async (state,token) => {\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/seller\",\n            Authorization: \"Bearer \" + token\n          };\n          console.log()\n          const self = this\n          await axios(req)\n          .then(function(response){\n                console.log(\"id === \", response.data.id)\n                if (response.data.id !== null ){\n                    localStorage.setItem(\"role\", response.data.role);\n                    self.props.history.push(\"/\")               \n                    alert(\"login success\")\n                }\n            })\n            .catch(function(error){\n                // handle error\n            })\n    },\n\n    postSignUp1 : async (state) => {\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/user/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                console.log(mydata)\n                console.log(error)\n                return false\n        })\n    },\n    postSignUp2 : async (state) => {\n        console.warn(\"username\",state.userNameInput)\n        console.warn(\"password\",state.userPasswordInput)\n        console.warn(\"fullname\",state.UserFullName)\n        console.warn(\"address\",state.userAddress)\n        console.warn(\"email\",state.userEmail)\n        console.warn(\"phone\",state.userPhone)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/agent/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n        const self = this\n        await axios(req)\n        .then(function(response){\n            store.setState({token : response.data.token, is_login : true})\n            self.props.history.push(\"/\")               \n                alert(\"login success\")\n        })\n        .catch(function(error){\n            store.setState({isLoading: false})\n            // handle error\n        })\n        \n    },\n\n    postSignUp3 : async (state) => {\n        console.warn(\"username\",state.userNameInput)\n        console.warn(\"password\",state.userPasswordInput)\n        console.warn(\"toko\",state.userShop)\n        console.warn(\"fullname\",state.UserFullName)\n        console.warn(\"address\",state.userAddress)\n        console.warn(\"email\",state.userEmail)\n        console.warn(\"phone\",state.userPhone)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const shop = state.userShop\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"shop_name\": shop,\n            \"fullname_owner\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/seller/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n        const self = this\n        await axios(req)\n        .then(function(response){\n            store.setState({token : response.data.token, is_login : true})\n            self.props.history.push(\"/\")               \n        })\n        .catch(function(error){\n            store.setState({isLoading: false})\n            // handle error\n            console.log(error)\n        })\n        \n    },\n\n    Review : async (state) => {\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/review\"\n          };\n          const self = this\n          await axios(req)\n          .then(function(response){\n                store.setState({\n                    image_user : response.data.image_user, \n                    name_user: response.data.nama_user, \n                    rating_user: response.data.rating_user, \n                    review_user: response.data.review_user, \n                    image_agent : response.data.image_agent, \n                    name_agent: response.data.nama_agent, \n                    rating_agent: response.data.rating_agent, \n                    review_agent: response.data.review_agent,\n                })                \n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n                console.log(error)\n            })\n    }\n\n    // RequestDataProfuctasync : async (state) => {\n    //     const req = {\n    //         method: \"get\",\n    //         url: \"http://0.0.0.0:5000/review\"\n    //       };\n    //       const self = this\n    //       await axios(req)\n    //       .then(function(response){\n    //             store.setState({\n    //                 image_user : response.data.image_user, \n    //                 name_user: response.data.nama_user, \n    //                 rating_user: response.data.rating_user, \n    //                 review_user: response.data.review_user, \n    //                 image_agent : response.data.image_agent, \n    //                 name_agent: response.data.nama_agent, \n    //                 rating_agent: response.data.rating_agent, \n    //                 review_agent: response.data.review_agent,\n    //             })                \n    //         })\n    //         .catch(function(error){\n    //             store.setState({isLoading: false})\n    //             // handle error\n    //             console.log(error)\n    //         })\n    //     }\n})\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\nconst initialState = {\n  userNameInput: \"\",\n  userPasswordInput: \"\",\n  UserFullName: \"\",\n  userEmail: \"\",\n  userAddress: \"\",\n  userPhone: \"\",\n  token: \"\",\n  searchKeyword: \"\",\n  isiArticle: \"\",\n  judulArticle: \"\",\n  fotoUrlInput: \"\",\n  isLoading: false,\n  cekFotoStatus: false,\n  linkAudio: \"\",\n  fullName: \"\",\n  textAudio: \"Indonesia\",\n  is_login: false\n};\nexport const store = createStore(initialState);\nexport const actions = store => ({\n  getArticle: async (state, searchKeyword) => {\n    console.log(initialState.searchKeyword);\n    store.setState({\n      isLoading: true\n    });\n    await axios.get(\"https://en.wikipedia.org/api/rest_v1/page/summary/\" + searchKeyword).then(function (response) {\n      store.setState({\n        isiArticle: response.data.extract,\n        judulArticle: response.data.title,\n        isLoading: false\n      });\n      console.log(response);\n      console.log(initialState.isiArticle);\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      });\n      console.log(initialState.searchKeyword); // handle error\n\n      console.log(error);\n    });\n  },\n  getRandomArticle: async state => {\n    store.setState({\n      isLoading: true\n    });\n    await axios.get(\"https://en.wikipedia.org/api/rest_v1/page/random/summary\").then(function (response) {\n      store.setState({\n        isiArticle: response.data.extract,\n        judulArticle: response.data.title,\n        isLoading: false\n      });\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  getSignIn: async state => {\n    console.log(\"username\", state.userNameInput);\n    console.log(\"password\", state.userPasswordInput);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const mydata = {\n      \"username\": username,\n      \"password\": password\n    };\n    const req = {\n      method: \"get\",\n      url: \"http://0.0.0.0:5000/login?username=\" + username + \"&password=\" + password\n    };\n    await axios(req).then(function (response) {\n      console.log(\"token === \", response.data.token);\n      store.setState({\n        token: response.data.token,\n        is_login: true\n      });\n    }).catch(function (error) {\n      store.setState({\n        isLoading: false\n      }); // handle error\n\n      console.log(error);\n    });\n  },\n  postSignUp1: async state => {\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/user/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      console.log(mydata);\n      console.log(error);\n      return false;\n    });\n  },\n  postSignUp2: async state => {\n    console.warn(\"username\", state.userNameInput);\n    console.warn(\"password\", state.userPasswordInput);\n    console.warn(\"fullname\", state.UserFullName);\n    console.warn(\"address\", state.userAddress);\n    console.warn(\"email\", state.userEmail);\n    console.warn(\"phone\", state.userPhone);\n    const username = state.userNameInput;\n    const password = state.userPasswordInput;\n    const fullname = state.UserFullName;\n    const address = state.userAddress;\n    const email = state.userEmail;\n    const phone = state.userPhone;\n    const mydata = {\n      \"username\": username,\n      \"password\": password,\n      \"fullname\": fullname,\n      \"email\": email,\n      \"address\": address,\n      \"number_phone\": phone\n    };\n    const req = {\n      method: \"post\",\n      url: \"http://0.0.0.0:5000/agent/registration\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: mydata\n    };\n    await axios(req).then(response => {\n      store.setState({\n        \"is_login\": true\n      }); //   return response\n    }).catch(error => {\n      console.log(mydata);\n      console.log(error);\n      return false;\n    });\n  }\n});","map":{"version":3,"sources":["/home/alta10/fuk/github/fullstack4_hedy/Phase 2/Project Frontend/porto/src/store.js"],"names":["createStore","string","axios","initialState","userNameInput","userPasswordInput","UserFullName","userEmail","userAddress","userPhone","token","searchKeyword","isiArticle","judulArticle","fotoUrlInput","isLoading","cekFotoStatus","linkAudio","fullName","textAudio","is_login","store","actions","getArticle","state","console","log","setState","get","then","response","data","extract","title","catch","error","getRandomArticle","getSignIn","username","password","mydata","req","method","url","postSignUp1","fullname","address","email","phone","headers","postSignUp2","warn"],"mappings":"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","sourcesContent":["import createStore from 'unistore';\nimport { string } from 'prop-types';\nimport axios from 'axios';\n\nconst initialState = {\n    userNameInput:\"\",\n    userPasswordInput:\"\",\n    UserFullName:\"\",\n    userEmail:\"\",\n    userAddress:\"\",\n    userPhone:\"\",\n    token:\"\",\n    searchKeyword:\"\",\n    isiArticle:\"\",\n    judulArticle:\"\",\n    fotoUrlInput: \"\",\n    isLoading:false,\n    cekFotoStatus: false,\n    linkAudio: \"\",\n    fullName : \"\",\n    textAudio: \"Indonesia\",\n    is_login: false\n    \n};\nexport const store = createStore(initialState)\n\nexport const actions = store => ({\n    getArticle: async (state, searchKeyword) => {\n        console.log(initialState.searchKeyword)\n        store.setState({isLoading:true})\n        await axios\n            .get(\"https://en.wikipedia.org/api/rest_v1/page/summary/\"+searchKeyword)\n            .then(function(response){\n                store.setState({isiArticle:response.data.extract, judulArticle:response.data.title, isLoading:false})\n                console.log(response)\n                console.log(initialState.isiArticle)\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                console.log(initialState.searchKeyword)\n                // handle error\n                console.log(error)\n            })\n    },\n    getRandomArticle: async (state) => {\n        store.setState({isLoading:true})\n        await axios\n            .get(\"https://en.wikipedia.org/api/rest_v1/page/random/summary\")\n            .then(function(response){\n                store.setState({isiArticle:response.data.extract, judulArticle:response.data.title, isLoading:false})\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n                console.log(error)\n            })\n    },\n    getSignIn : async (state) => {\n        console.log(\"username\",state.userNameInput)\n        console.log(\"password\",state.userPasswordInput)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const mydata = {\n            \"username\": username,\n            \"password\": password\n        };\n        const req = {\n            method: \"get\",\n            url: \"http://0.0.0.0:5000/login?username=\"+username+\"&password=\"+password\n          };\n    \n          await axios(req)\n          .then(function(response){\n                console.log(\"token === \", response.data.token)\n                store.setState({token : response.data.token, is_login:true})\n            })\n            .catch(function(error){\n                store.setState({isLoading: false})\n                // handle error\n                console.log(error)\n            })\n    },\n\n    postSignUp1 : async (state) => {\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/user/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                console.log(mydata)\n                console.log(error)\n                return false\n        })\n    },\n    postSignUp2 : async (state) => {\n        console.warn(\"username\",state.userNameInput)\n        console.warn(\"password\",state.userPasswordInput)\n        console.warn(\"fullname\",state.UserFullName)\n        console.warn(\"address\",state.userAddress)\n        console.warn(\"email\",state.userEmail)\n        console.warn(\"phone\",state.userPhone)\n        const username = state.userNameInput\n        const password = state.userPasswordInput\n        const fullname = state.UserFullName\n        const address = state.userAddress\n        const email = state.userEmail\n        const phone = state.userPhone\n        const mydata = {\n            \"username\": username,\n            \"password\": password,\n            \"fullname\": fullname,\n            \"email\": email,\n            \"address\": address,\n            \"number_phone\": phone\n        };\n  \n        const req = {\n          method: \"post\",\n          url: \"http://0.0.0.0:5000/agent/registration\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          data: mydata\n        };\n  \n        await axios(req)\n            .then(response => {\n                  store.setState({\n                      \"is_login\": true\n                  });\n              //   return response\n            })\n            .catch(error => {\n                console.log(mydata)\n                console.log(error)\n                return false\n        })\n    }\n})\n"]},"metadata":{},"sourceType":"module"}